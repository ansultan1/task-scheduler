// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Task task
//
// swagger:model Task
type Task struct {

	// command
	Command string `json:"Command,omitempty"`

	// ID
	ID string `json:"ID,omitempty"`

	// name
	Name string `json:"Name,omitempty"`

	// recurring
	Recurring bool `json:"Recurring,omitempty"`

	// The scheduled date and time for the task
	// Format: date-time
	ScheduledTime strfmt.DateTime `json:"ScheduledTime,omitempty"`

	// time zone
	TimeZone string `json:"TimeZone,omitempty"`
}

// Validate validates this task
func (m *Task) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateScheduledTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Task) validateScheduledTime(formats strfmt.Registry) error {
	if swag.IsZero(m.ScheduledTime) { // not required
		return nil
	}

	if err := validate.FormatOf("ScheduledTime", "body", "date-time", m.ScheduledTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this task based on context it is used
func (m *Task) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Task) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Task) UnmarshalBinary(b []byte) error {
	var res Task
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
